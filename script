local Settings = {
    LockClosestPart = true,
    LockPart = "Head",
    FOVRadius = 100,
    ToggleKey = Enum.KeyCode.F,
    HighlightEsp = true,
    VisibleFOVCircle = false,
}



game:GetService("StarterGui"):SetCore("SendNotification", {
    Title = "AIM + ESP",
    Text = "Thanks for using! This script was made for a game called GunFight Arena, but it can be used in any other game.",
    Duration = 4,
})
wait(0.2)


local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local camera = game.Workspace.CurrentCamera
local lockedOn = false
local targetPart = nil
local targetPlayer = nil


local FOV = Drawing.new("Circle")
FOV.Radius = Settings.FOVRadius
FOV.Thickness = 2
FOV.Transparency = 1
FOV.Color = Color3.fromRGB(165, 199, 57)
FOV.Visible = Settings.VisibleFOVCircle

local function UpdateFOVPosition()
    local mouse = game.Players.LocalPlayer:GetMouse()
    FOV.Position = Vector2.new(mouse.X, mouse.Y + 36)
end


game:GetService("RunService").Heartbeat:Connect(UpdateFOVPosition)


local function IsPlayerInFOV(player)
    local mouse = game.Players.LocalPlayer:GetMouse()
    local mousePosition = Vector2.new(mouse.X, mouse.Y)
    local playerPosition = camera:WorldToScreenPoint(player.Character[Settings.LockPart].Position)

    local distance = (mousePosition - Vector2.new(playerPosition.X, playerPosition.Y)).Magnitude
    return distance <= FOV.Radius
end


local function FindClosestPartToMouse(player)
    local mouse = game.Players.LocalPlayer:GetMouse()
    local mousePosition = Vector2.new(mouse.X, mouse.Y)
    local character = player.Character
    if not character or not character:IsDescendantOf(game) then
        return nil
    end

    local closestPart = nil
    local closestDistance = math.huge

    for _, part in pairs(character:GetDescendants()) do
        if part:IsA("BasePart") then
            local partPosition = camera:WorldToScreenPoint(part.Position)
            local distance = (mousePosition - Vector2.new(partPosition.X, partPosition.Y)).Magnitude

            if distance < closestDistance then
                closestDistance = distance
                closestPart = part
            end
        end
    end

    return closestPart
end


local function LockOntoPart(part)
    lockedOn = true
    targetPart = part
    print("Locking onto part:", part.Name)
end


local function Unlock()
    lockedOn = false
    targetPart = nil
    print("Unlocking.")
end


local function FindClosestPlayer(position)
    local closestPlayer = nil
    local closestDistance = math.huge
    local localPlayer = game.Players.LocalPlayer

    for _, player in pairs(Players:GetPlayers()) do
        if player ~= localPlayer then 
            local character = player.Character
            if character and character:IsDescendantOf(game) and IsPlayerInFOV(player) then
                local humanoid = character:FindFirstChildOfClass("Humanoid")
                if humanoid then
                    local part = Settings.LockClosestPart and FindClosestPartToMouse(player) or humanoid.Parent:FindFirstChild(Settings.LockPart)

                    if part then
                        local distance = (part.Position - position).Magnitude


                        local playerTeam = player.Team
                        local localPlayerTeam = localPlayer.Team

                        if not playerTeam or not localPlayerTeam or playerTeam ~= localPlayerTeam then
                            if distance < closestDistance then
                                closestDistance = distance
                                closestPlayer = player
                            end
                        end
                    end
                end
            end
        end
    end

    return closestPlayer
end


local function ToggleLockOn()
    local mouse = game.Players.LocalPlayer:GetMouse()
    local mousePosition = mouse.Hit.p

    if lockedOn then
        Unlock()
    else
        targetPlayer = FindClosestPlayer(mousePosition)
        if targetPlayer then
            local partToLockOnto = Settings.LockClosestPart and FindClosestPartToMouse(targetPlayer) or targetPlayer.Character[Settings.LockPart]
            if partToLockOnto then
                LockOntoPart(partToLockOnto)
            end
        else
            print("No eligible players found inside FOV and close to the cursor. Locking onto Unknown.")
        end
    end
end


UserInputService.InputBegan:Connect(function(input, gameProcessedEvent)
    if not gameProcessedEvent and input.KeyCode == Settings.ToggleKey then
        ToggleLockOn()
    end
end)



local function UpdateCamera()
    if lockedOn and targetPart then
        local cameraPosition = camera.CFrame.p
        local lookVector = (targetPart.Position - cameraPosition).unit

        camera.CFrame = CFrame.new(cameraPosition, cameraPosition + lookVector)
    end
end


local RunService = game:GetService("RunService")
RunService.Heartbeat:Connect(UpdateCamera)


local function CheckHealth()
    if lockedOn and targetPlayer then
        local character = targetPlayer.Character
        if character and character:IsDescendantOf(game) then
            local humanoid = character:FindFirstChildOfClass("Humanoid")
            if humanoid and humanoid.Health <= 0 then
                Unlock()
                print(targetPlayer.Name .. "'s health reached 0 or lower. Unlocking.")
            end
        end
    end
end


RunService.Heartbeat:Connect(CheckHealth)

if Settings.HighlightEsp == true then
	loadstring(game:HttpGet("https://raw.githubusercontent.com/vis0795/GunFightArena/main/esp"))()
end
